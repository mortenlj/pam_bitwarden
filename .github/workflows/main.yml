name: Build

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  - push
  - workflow_dispatch

env:
  EARTHLY_USE_INLINE_CACHE: true
  EARTHLY_SAVE_INLINE_CACHE: true
  EARTHLY_VERBOSE: true
  EARTHLY_FULL_TARGET: true
  EARTHLY_OUTPUT: true

jobs:
  set-version:
    name: Set variables
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: "Set version"
        id: constants
        run: |
          export version="$(date +%Y%m%d%H%M%S)-$(git describe --always --dirty --exclude '*')"
          echo "version=${version}"
          echo "version=${version}" >> ${GITHUB_OUTPUT}
    outputs:
      version: "${{ steps.constants.outputs.version }}"
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs:
      - set-version
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
    env:
      version: "${{ needs.set-version.outputs.version }}"
    steps:
      - uses: earthly/actions-setup@v1
        with:
          version: "latest"
      - uses: actions/checkout@v4
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and possibly push
        env:
          EARTHLY_PUSH: "${{ github.ref == 'refs/heads/main' }}"
          EARTHLY_ORG: ${{ vars.EARTHLY_ORG }}
          EARTHLY_SATELLITE: ${{ vars.EARTHLY_SATELLITE }}
          EARTHLY_TOKEN: ${{ secrets.EARTHLY_TOKEN }}
          DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          earthly +build-target "--target=${{ matrix.target }}" "--version=${version}"
      - name: Save executables for release
        uses: actions/upload-artifact@v4
        with:
          name: executables-${{ matrix.target }}
          path: target/libpam_bitwarden.*
          if-no-files-found: error
  release-candidate:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - set-version
      - build
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - uses: lee-dohm/close-matching-issues@v2
        with:
          query: 'label:release-candidate'
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: dacbd/create-issue-action@v2.0.0
        name: Create Release candidate issue
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          title: Release candidate ${{ needs.set-version.outputs.version }}
          labels: release-candidate
          body: |
            A new release candidate has been created.
            Comment on this issue with `/approve-release` to promote this candidate to a full release.
            <details>
            <summary>Release candidate data</summary>
            ```
            version: ${{ needs.set-version.outputs.version }}
            run_id: ${{ github.run_id }}
            ```
            </details>
